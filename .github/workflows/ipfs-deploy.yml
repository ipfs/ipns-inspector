name: Build and Pin to IPFS

on:
  workflow_call:
    inputs:
      node-version:
        description: 'Node.js version to use'
        default: '20'
        required: false
        type: string
      kubo-version:
        description: 'Kubo version to use for pinning https://dist.ipfs.tech/kubo/versions'
        default: 'v0.33.0-rc3'
        required: false
        type: string
      build-command:
        description: 'Command to build the project'
        default: 'npm run build'
        required: false
        type: string
      build-output-dir:
        description: 'Directory containing build output that will be merkelized'
        default: 'out'
        required: false
        type: string
      pinata-pinning-url:
        description: 'Pinata Pinning Service URL'
        default: 'https://api.pinata.cloud/psa'
        required: false
        type: string
      filebase-bucket:
        description: 'Filebase bucket name'
        required: false
        type: string
      upload-to-filebase:
        description: 'Whether to upload to Filebase (requires paid account for html uploads)'
        default: false
        required: false
        type: boolean
    secrets:
      STORACHA_KEY:
        required: true
      STORACHA_PROOF:
        required: true
      FILEBASE_SECRET_KEY:
        required: true
      FILEBASE_ACCESS_KEY:
        required: true
      PINATA_JWT_TOKEN:
        required: true
    outputs:
      cid:
        description: 'The IPFS CID of the uploaded content'
        value: ${{ jobs.build.outputs.cid }}

permissions:
  contents: read
  pull-requests: write
  statuses: write

jobs:
  build:
    runs-on: 'ubuntu-latest'
    outputs:
      cid: ${{ steps.merklize.outputs.cid }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ inputs.node-version }}
          cache: 'npm'

      - name: Install dependencies
        run: |
          npm ci
          npm install -g ipfs-car

      - name: Build project
        run: ${{ inputs.build-command }}

      - name: Merkelize Build
        id: merklize
        run: |
          CID=$(npx ipfs-car pack ${{ inputs.build-output-dir }} --no-wrap --output build.car 2>&1 | tail -n 1)
          echo "cid=$CID" >> "$GITHUB_OUTPUT"
          echo $CID

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-output-car
          path: build.car

  upload-car-to-storacha:
    runs-on: 'ubuntu-latest'
    needs: 'build'
    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-output-car

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ inputs.node-version }}

      - name: Configure and upload CAR to Storacha
        env:
          W3_PRINCIPAL: ${{ secrets.STORACHA_KEY }}
        run: |
          npm install -g @web3-storage/w3cli
          w3 space add ${{ secrets.STORACHA_PROOF }}
          if ! w3 up --car build.car; then
            echo "::error::Failed to upload to IPFS"
            exit 1
          fi
  # Upload the CAR to Filebase
  upload-car-to-filebase:
    runs-on: 'ubuntu-latest'
    needs: 'build'
    if: inputs.upload-to-filebase == 'true'
    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-output-car

      - name: Upload CAR to Filebase
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.FILEBASE_ACCESS_KEY }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.FILEBASE_SECRET_KEY }}
          FILEBASE_BUCKET: ${{ inputs.filebase-bucket }}
        run: |
          aws --endpoint https://s3.filebase.com s3 cp build.car s3://${FILEBASE_BUCKET} --metadata 'import=car'

  # Once CAR has been uploaded to storacha, pin it to Pinata so we have multiple providers.
  # With the Pinning API, we just instruct Pinata to fetch and pin the blocks of the build.
  # Uploading CAR would be better (since its explciit) but Pinata doesn't support CAR uploads
  pin-cid-to-pinata:
    runs-on: 'ubuntu-latest'
    needs: ['build', 'upload-car-to-storacha']
    steps:
      - uses: ipfs/download-ipfs-distribution-action@v1
        with:
          name: kubo
          version: '${{ inputs.kubo-version }}'
      - name: Pin CID to Pinata
        run: |
          ipfs init
          ipfs pin remote service add pinata "${{ inputs.pinata-pinning-url }}" ${{ secrets.PINATA_JWT_TOKEN }}
          ipfs pin remote add --service=pinata --name="build-${{ github.event.pull_request.head.sha }}" ${{ needs.build.outputs.cid }}

  update-commit-status:
    runs-on: 'ubuntu-latest'
    needs: ['build', 'upload-car-to-storacha']
    steps:
      - name: Update commit status
        uses: actions/github-script@v7
        with:
          script: |
            const cid = '${{ needs.build.outputs.cid }}';

            // For PR events, we need to use the head SHA
            const sha = context.eventName === 'pull_request'
              ? context.payload.pull_request.head.sha
              : context.sha;

            await github.rest.repos.createCommitStatus({
              owner: context.repo.owner,
              repo: context.repo.repo,
              sha: sha,
              state: 'success',
              target_url: `https://w3s.link/ipfs/${cid}`,
              description: `CID: ${cid}`,
              context: 'IPFS Preview'
            });

      - name: Find Comment to update
        if: github.event_name == 'pull_request'
        uses: peter-evans/find-comment@v3
        id: fc
        with:
          issue-number: ${{ github.event.pull_request.number }}
          comment-author: 'github-actions[bot]'
          body-includes: 'üöÄ Build'

      - name: Create or update comment
        if: github.event_name == 'pull_request'
        uses: peter-evans/create-or-update-comment@v4
        with:
          comment-id: ${{ steps.fc.outputs.comment-id }}
          issue-number: ${{ github.event.pull_request.number }}
          body: |
            ### üöÄ Build Preview on IPFS ready
            - üîé Commit: ${{ github.event.pull_request.head.sha }}
            - üîè CID `${{ needs.build.outputs.cid }}`
            - üì¶ [Preview](https://w3s.link/ipfs/${{ needs.build.outputs.cid }})
            - üîó [Service Worker Preview](https://inbrowser.link/ipfs/${{ needs.build.outputs.cid }})
          edit-mode: replace
